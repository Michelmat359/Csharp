using System;
using System.Collections.Generic;
using System.Linq;

namespace EjemplosLambda
{
    class Program
    {
        class Clientes {
            public string nombre { get; set; }
            public int edad { get; set; }
        }
        static void Main(string[] args)
        {
            // DECLARACIONES MULTIPLES DE EXPRESIONES LAMBDA
            /*// Expresion LAMBDA esta tipada de forma implicita, creamos una instancia a la expresion

            Func<int, int> expresion1 = x => x + 1;

            // Usar expresion lambda en el cuerpo de la declaracion

            Func<int, int> expresion2 = x => { return x + 1; };

            // Usar parametrros en la expresion lambda

            Func<int, int> expresion3 = (int x) => x + 1;

            // Usando parametros en la expresion para usar en el cuerpo de la declaracion

            Func<int, int> expresion4 = (int x) => { return x + 1; };

            // Usando lambda con varios parametros

            Func<int, int, int> expresion5 = (x, y) => x * y;

            // Usando lambda en un metodo delegado

            Func<int, int> expresion6 = delegate (int x) { return x + 1; };

            //Usando lambda en un metodo delegado sin parametros

            Func<int> expresion7 = delegate { return 1 + 1; };

            Console.WriteLine(expresion1.Invoke(1));
            Console.WriteLine(expresion2.Invoke(1));
            Console.WriteLine(expresion3.Invoke(1));
            Console.WriteLine(expresion4.Invoke(1));
            Console.WriteLine(expresion5.Invoke(1, 1));
            Console.WriteLine(expresion6.Invoke(1));
            Console.WriteLine(expresion7.Invoke());*/

            // DECLARACION LAMDA BASICA
            /*
            List<int> numeros = new List<int>() { 1, 2, 3, 4, 5, 6, 7, 8, 9 };

            List<int> pares = numeros.FindAll(x => (x % 2) == 0);

            foreach (int p in pares) {
                Console.WriteLine("Los numeros pares son: {0}", p);
            }
            */

            //DECLARACIONES LAMDA CON CLASES

            List<Clientes> cliente = new List<Clientes>()
           {
                new Clientes {nombre = "Miguel Ángel", edad = 30 },
                new Clientes {nombre = "Laura", edad = 29 }
           };

            var nombres = cliente.Select(x => x.nombre);

            foreach (var nombre in nombres)
            {
                Console.WriteLine(nombre);
            }

            // Ordenar por edad

            var edad = cliente.OrderBy(x => x.edad);

            foreach (var e in edad)
            {
                Console.WriteLine("El cliente {0}, tiene {1} años", e.nombre, e.edad);
            }


            Console.ReadKey();




        }
    }
}
